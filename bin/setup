#!/usr/bin/env ruby
# frozen_string_literal: true

require 'pathname'
require 'fileutils'
include FileUtils

# path to your application root.
APP_ROOT = Pathname.new File.expand_path('../../', __FILE__)

def system!(*args)
  system(*args) || abort("\n== Command #{args} failed ==")
end

def yesno(question, color)
  choices = "yn"
  ask("#{question} [#{choices}]? ".send(color)) do |q|
    q.echo = false
    q.character = true
    q.validate  = /\A[#{choices}]\Z/
  end
end

chdir APP_ROOT do
  # This script is a starting point to setup your application.
  # Add necessary setup steps to this file.

  puts '== Installing dependencies =='
  system! 'gem install bundler highline colorize --conservative'
  system('bundle check') || system!('bundle install --jobs=4')
  require 'highline/import'
  require 'colorize'

  # Install JavaScript dependencies if using Yarn
  # system('bin/yarn')

  puts "\n== Setting up git hooks ==".green
  system! 'bundle exec overcommit --install'

  puts "\n== Setting up the database ==".green
  case yesno("Do you want to start PostgreSQL using Docker?", :yellow)
  when "y"
    system("bash start_database.sh")
  when "n"
    answer = yesno("Does you .env.development.local export the right variables?", :yellow)
    abort("Please edit your .env.development.local".red) if answer == "n"
  end

  puts "\n== Preparing database ==".green
  system! 'bin/rails db:create db:setup'

  puts "\n== Removing old logs and tempfiles ==".green
  system! 'bin/rails log:clear tmp:clear'

  puts "\n== Done! ==".green
  puts "You can now start the application using: " + "rails s".yellow
end
